@model EnterpriseNavigation.Models.Category

@{
   ViewData["PageTitle"] = Model.CategoryId == 0? "Create a new category " : "Edit Category" ; 
}



<div class="row">
    <div class="col-md-7">
        <div class="Widget p-5 " style="background-color:#212b36">
            <form asp-action="AddOrEdit" id="form-element">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input hidden asp-for="CategoryId" />
                <div class="mb-3">
                    <div class='e-btn-group custom-rbt-group'>
                        <input type="radio" id="radioleft" name="Type" value="Expense" checked="@(Model.Type=="Expense")" />
                        <label class="e-btn" for="radioleft">Expense</label>
                        <input type="radio" id="radiomiddle" name="Type" value="Income" checked="@(Model.Type=="Income")" />
                        <label class="e-btn" for="radiomiddle">Income</label>

                    </div>
                </div>
                <div class="mb-3">
                    <ejs-textbox id="title"  name="title" ejs-for="Title" placeholder="Title" floatLabelType="Always"></ejs-textbox>
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <ejs-textbox id="icon" name="icon" ejs-for="Icon" placeholder="Icon" floatLabelType="Always"></ejs-textbox>
                    <span asp-validation-for="Icon" class="text-danger"></span>
                </div>
                <ejs-button id="Submit" type="submit" content="Submit" cssClass="e-success"></ejs-button>
            </form>
        </div>

    </div>
    <div class="col-md-5">
        <div class="widget h-100 d-flex justify-content-center align-items-center" style="background-color:#212b36">
            <i class="fa-solid fa-shapes fa-2xl"></i>
        </div>
    </div>
</div>


<script>
    // Sets required property in the FormValidator rules collection
    var options = {
        rules: {

        },
    };

    // Defines FormValidator to validate the TextBox
    var formObject = new ej.inputs.FormValidator('#form-element', options);

    // Places error label outside the TextBox using the customPlacement event of FormValidator
    formObject.customPlacement = function (element, errorElement) {
        element.parentElement.parentElement.appendChild(errorElement);
    };
    // Form validates the input values using validate method of FormValidator
    document.getElementById("submit").addEventListener('click', function () {
        formObject.validate();
    });
</script>




@*we will use client site validation from the syncfusion 
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
*@